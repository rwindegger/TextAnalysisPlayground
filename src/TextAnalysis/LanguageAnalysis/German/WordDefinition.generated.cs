#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ClassGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using System.ComponentModel;
using TextAnalysis;

namespace TextAnalysis	
{
	[System.Serializable()]
	public partial class WordDefinition : IDataErrorInfo, INotifyPropertyChanging, INotifyPropertyChanged, System.Runtime.Serialization.ISerializable
	{
		private string _id;
		[System.ComponentModel.DataAnnotations.Required()]
		public virtual string Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if(this._id != value)
				{
					this.OnPropertyChanging("Id");
					this._id = value;
					this.OnPropertyChanged("Id");
				}
			}
		}
		
		private int _wordTypId;
		[System.ComponentModel.DataAnnotations.Required()]
		public virtual int WordTypId
		{
			get
			{
				return this._wordTypId;
			}
			set
			{
				if(this._wordTypId != value)
				{
					this.OnPropertyChanging("WordTypId");
					this._wordTypId = value;
					this.OnPropertyChanged("WordTypId");
				}
			}
		}
		
		private DateTime _lastUpdated;
		[System.ComponentModel.DataAnnotations.Required()]
		public virtual DateTime LastUpdated
		{
			get
			{
				return this._lastUpdated;
			}
			set
			{
				if(this._lastUpdated != value)
				{
					this.OnPropertyChanging("LastUpdated");
					this._lastUpdated = value;
					this.OnPropertyChanged("LastUpdated");
				}
			}
		}
		
		private int _wordFrequencyId;
		[System.ComponentModel.DataAnnotations.Required()]
		public virtual int WordFrequencyId
		{
			get
			{
				return this._wordFrequencyId;
			}
			set
			{
				if(this._wordFrequencyId != value)
				{
					this.OnPropertyChanging("WordFrequencyId");
					this._wordFrequencyId = value;
					this.OnPropertyChanged("WordFrequencyId");
				}
			}
		}
		
		private WordTyp _wordTyp;
		public virtual WordTyp WordTyp
		{
			get
			{
				return this._wordTyp;
			}
			set
			{
				if(this._wordTyp != value)
				{
					this.OnPropertyChanging("WordTyp");
					this._wordTyp = value;
					this.OnPropertyChanged("WordTyp");
				}
			}
		}
		
		private WordFrequency _wordFrequency;
		public virtual WordFrequency WordFrequency
		{
			get
			{
				return this._wordFrequency;
			}
			set
			{
				if(this._wordFrequency != value)
				{
					this.OnPropertyChanging("WordFrequency");
					this._wordFrequency = value;
					this.OnPropertyChanged("WordFrequency");
				}
			}
		}
		
		private IList<SynonymMatch> _synonymMatches = new List<SynonymMatch>();
		public virtual IList<SynonymMatch> Synonyms
		{
			get
			{
				return this._synonymMatches;
			}
		}
		
		private IList<WordMatch> _wordMatches = new List<WordMatch>();
		public virtual IList<WordMatch> WordMatches
		{
			get
			{
				return this._wordMatches;
			}
		}
		
		#region IDataErrorInfo members
		
		private string error = string.Empty;
		public string Error
		{
			get
			{
				return this.error;
			}
		}
		
		public string this[string propertyName]
		{
			get
			{
				this.ValidatePropertyInternal(propertyName, ref this.error);
		
				return this.error;
			}
		}
		
		protected virtual void ValidatePropertyInternal(string propertyName, ref string error)
		{
		    this.ValidateProperty(propertyName, ref error);
		}
		
		// Please implement this method in a partial class in order to provide the error message depending on each of the properties.
		partial void ValidateProperty(string propertyName, ref string error);
		
		#endregion
		
		#region INotifyPropertyChanging members
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanging(string propertyName)
		{
			if(this.PropertyChanging != null)
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		#endregion
		
		#region INotifyPropertyChanged members
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void OnPropertyChanged(string propertyName)
		{
			if(this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		#endregion
		
		#region ISerializable Implementation
		
		public WordDefinition()
		{
		}
		
		protected WordDefinition(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
		{
			this.Id = info.GetString("Id");
			this.WordTypId = info.GetInt32("WordTypId");
			this.LastUpdated = (DateTime)info.GetValue("LastUpdated", typeof(DateTime));
			this.WordFrequencyId = info.GetInt32("WordFrequencyId");
			CustomizeDeserializationProcess(info, context);
		}
		
		public virtual void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
		{
			info.AddValue("Id", this.Id, typeof(string));
			info.AddValue("WordTypId", this.WordTypId, typeof(int));
			info.AddValue("LastUpdated", this.LastUpdated, typeof(DateTime));
			info.AddValue("WordFrequencyId", this.WordFrequencyId, typeof(int));
			CustomizeSerializationProcess(info, context);
		}
		
		partial void CustomizeSerializationProcess(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
		partial void CustomizeDeserializationProcess(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
		#endregion
	}
}
#pragma warning restore 1591
